import xml.etree.ElementTree as ET

from bs4 import BeautifulSoup
from selenium import webdriver

#
# Parse the XML string
# root = ET.fromstring(xml_string)
root = ET.parse('pom_file.xml')
# Find the properties element
properties = root.find('properties')

# Find all the dependency elements
dependencies = root.findall('dependencies/dependency')

output_file = 'vulnerability_output.csv'
with open(output_file, 'a') as f:
    f.write(f"Group Id,Artifact Id,Version,Vulnerability,URL\n")


def get_vulnerability_count(group_id, artifact_id, jar_version):
    url = 'https://mvnrepository.com/artifact/' + group_id + '/' + artifact_id
    dr = webdriver.Chrome()
    dr.get(url)
    soup = BeautifulSoup(dr.page_source, 'html.parser')
    # tbody = soup.find('tbody')
    tbodys = soup.findAll('tbody')

    vulnerability_count = 0
    for tbody in tbodys:
        for tr in tbody.find_all('tr'):
            version_element = tr.find('a', class_='vbtn release')
            if version_element and version_element.text.strip() == jar_version:
                vulnerability_element = tr.find('a', class_='vuln')
                if vulnerability_element:
                    vulnerability_text = vulnerability_element.text.strip()
                    vulnerability_count = int(vulnerability_text.split()[0])
                break

    return vulnerability_count


# Iterate over the dependency elements
for dependency in dependencies:
    # Find the version element
    version_element = dependency.find('version')

    if "$" in version_element.text:
        # Get the version property name
        version_property = version_element.text.strip('${}')

        # Find the corresponding property element
        property_element = properties.find(version_property)

        # Update the version with the property value
        version_element.text = property_element.text
        version = version_element.text

    groupId = dependency.find('groupId').text
    artifactId = dependency.find('artifactId').text
    vulnerability = get_vulnerability_count(groupId, artifactId, version_element.text)

    with open(output_file, 'a') as f:
        f.write(
            f"{groupId},{artifactId},{version_element.text}, {vulnerability},https://mvnrepository.com/artifact/{groupId}/{artifactId}\n")
