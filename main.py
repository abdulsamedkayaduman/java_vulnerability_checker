import xml.etree.ElementTree as ET

from bs4 import BeautifulSoup
from selenium import webdriver

# Load the XML string
xml_string = '''
<root>
    <dependencies>
        <dependency>
            <groupId>org.glassfish</groupId>
            <artifactId>javax.faces</artifactId>
            <version>${javax.faces.version}</version>
        </dependency>
        <dependency>
            <groupId>org.jboss.weld.servlet</groupId>
            <artifactId>weld-servlet-shaded</artifactId>
            <version>${jboss.weld.version}</version>
        </dependency>
    </dependencies>
    <properties>
        <javax.faces.version>2.3.0</javax.faces.version>
        <jboss.weld.version>3.0.0.Final</jboss.weld.version>
    </properties>
</root>
'''

# Parse the XML string
# root = ET.fromstring(xml_string)
root = ET.parse('pom_file.xml')
# Find the properties element
properties = root.find('properties')

# Find all the dependency elements
dependencies = root.findall('dependencies/dependency')

output_file = 'vulnerability_output.csv'
with open(output_file, 'a') as f:
    f.write(f"groupId,artifactId,version, vulnerability,url\n")


def get_vulnerability_count(groupId, artifactId, version):
    url = 'https://mvnrepository.com/artifact/' + groupId + '/' + artifactId
    dr = webdriver.Chrome()
    dr.get(url)
    soup = BeautifulSoup(dr.page_source, 'html.parser')
    # tbody = soup.find('tbody')
    tbodys = soup.findAll('tbody')

    vulnerability_count = 0
    for tbody in tbodys:
        for tr in tbody.find_all('tr'):
            version_element = tr.find('a', class_='vbtn release')
            if version_element and version_element.text.strip() == version:
                vulnerability_element = tr.find('a', class_='vuln')
                if vulnerability_element:
                    vulnerability_text = vulnerability_element.text.strip()
                    vulnerability_count = int(vulnerability_text.split()[0])
                break

    return vulnerability_count


# Iterate over the dependency elements
for dependency in dependencies:
    # Find the version element
    version_element = dependency.find('version')

    # Get the version property name
    version_property = version_element.text.strip('${}')

    # Find the corresponding property element
    property_element = properties.find(version_property)

    # Update the version with the property value
    version_element.text = property_element.text

    groupId = dependency.find('groupId').text
    artifactId = dependency.find('artifactId').text
    vulnerability = get_vulnerability_count(groupId, artifactId, version_element.text)

    with open(output_file, 'a') as f:
        f.write(f"{groupId},{artifactId},{version_element.text}, {vulnerability},https://mvnrepository.com/artifact/{groupId}/{artifactId}\n")
# Convert the modified XML back to string
modified_xml_string = ET.tostring(root, encoding='unicode')

# Print the modified XML string
print(modified_xml_string)
